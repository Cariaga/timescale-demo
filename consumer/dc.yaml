apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: consumer
  name: consumer
spec:
  replicas: 1
  selector:
    app: consumer
    deploymentconfig: consumer
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: consumer
        deploymentconfig: consumer
    spec:
      containers:
      - env:
        - name: KAFKA_BOOTSTRAP_SERVERS_CONFIG
          value: cluster-for-readings-kafka-bootstrap:9092
        - name: KAFKA_CLIENT_ID_CONFIG
          value: consumer
        - name: KAFKA_TOPICS
          value: readings
        - name: CONSUMER_KAFKA_GROUP_ID_CONFIG
          value: consumer-group
        - name: DB_HOST
          value: timescaledb
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: readings
        - name: DB_USER
          value: consol
        - name: DB_PASSWORD
          value: consol
        imagePullPolicy: Always
        name: consumer
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - consumer
      from:
        kind: ImageStreamTag
        name: consumer:latest
        namespace: timescale-demo
    type: ImageChange
